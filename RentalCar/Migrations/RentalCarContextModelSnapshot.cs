// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RentalCar.Models;

#nullable disable

namespace RentalCar.Migrations
{
    [DbContext(typeof(RentalCarContext))]
    partial class RentalCarContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("RentalCar.Models.Carro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<int>("AnoFabricacao")
                        .HasColumnType("integer")
                        .HasColumnName("ano_fabricacao");

                    b.Property<string>("Chassi")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("chassi");

                    b.Property<string>("Cor")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("cor");

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("date")
                        .HasColumnName("data_compra");

                    b.Property<string>("Descricao")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("descricao");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("modelo");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("observacoes");

                    b.Property<string>("Placa")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("placa");

                    b.Property<string>("Renavam")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("renavam");

                    b.HasKey("Id");

                    b.ToTable("carros");
                });

            modelBuilder.Entity("RentalCar.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("categorias");
                });

            modelBuilder.Entity("RentalCar.Models.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<int>("IdEstado")
                        .HasColumnType("integer")
                        .HasColumnName("id_estado");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.ToTable("cidades");
                });

            modelBuilder.Entity("RentalCar.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("celular");

                    b.Property<string>("Cnh")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("cnh");

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("cpf");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("endereco");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nome");

                    b.Property<string>("Rg")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("rg");

                    b.Property<string>("Telefone")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("RentalCar.Models.Combustivel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("combustiveis");
                });

            modelBuilder.Entity("RentalCar.Models.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("nome");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("uf");

                    b.HasKey("Id");

                    b.ToTable("estados");
                });

            modelBuilder.Entity("RentalCar.Models.Locacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataDevolucao")
                        .HasColumnType("date")
                        .HasColumnName("data_devolucao");

                    b.Property<DateTime>("DataLocacao")
                        .HasColumnType("date")
                        .HasColumnName("data_locacao");

                    b.Property<decimal>("Diaria")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("diaria");

                    b.Property<int>("DiasLocacao")
                        .HasColumnType("integer")
                        .HasColumnName("dias_locacao");

                    b.Property<int>("IdCarro")
                        .HasColumnType("integer")
                        .HasColumnName("id_carro");

                    b.Property<int>("IdCliente")
                        .HasColumnType("integer")
                        .HasColumnName("id_cliente");

                    b.Property<decimal>("ValorSeguro")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("valor_seguro");

                    b.Property<string>("observacao")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("observacao");

                    b.HasKey("Id");

                    b.HasIndex("IdCarro");

                    b.HasIndex("IdCliente");

                    b.ToTable("locacao");
                });

            modelBuilder.Entity("RentalCar.Models.Cidade", b =>
                {
                    b.HasOne("RentalCar.Models.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("RentalCar.Models.Locacao", b =>
                {
                    b.HasOne("RentalCar.Models.Carro", "Carro")
                        .WithMany("Locacoes")
                        .HasForeignKey("IdCarro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentalCar.Models.Cliente", "Cliente")
                        .WithMany("Locacoes")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carro");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("RentalCar.Models.Carro", b =>
                {
                    b.Navigation("Locacoes");
                });

            modelBuilder.Entity("RentalCar.Models.Cliente", b =>
                {
                    b.Navigation("Locacoes");
                });

            modelBuilder.Entity("RentalCar.Models.Estado", b =>
                {
                    b.Navigation("Cidades");
                });
#pragma warning restore 612, 618
        }
    }
}
